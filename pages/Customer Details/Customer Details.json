{
  "unpublishedPage": {
    "name": "Customer Details",
    "slug": "customer-details",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 4896,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 930,
          "containerStyle": "none",
          "snapRows": 124,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 87,
          "minHeight": 1292,
          "dynamicTriggerPathList": [],
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "Customer Details_GetDataFromPostgres.getCustomerDetails",
              "name": "GetDataFromPostgres.getCustomerDetails",
              "collectionId": "Customer Details_GetDataFromPostgres",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "() => {\n  var customerEmailAddress = InputCustomerEmailAddress.inputText;\n  var emailUUId = InputEmailUUID.inputText;\n  if (customerEmailAddress.length > 0) {\n    return GetCustomerByEmail.run();\n  } else if (emailUUId.length > 0) {\n    return GetCustomerByMailId.run();\n  }\n}"
              ],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "Customer Details_GetDataFromPostgres.getEntityDetails",
              "name": "GetDataFromPostgres.getEntityDetails",
              "collectionId": "Customer Details_GetDataFromPostgres",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "() => {\n  var entityId = InputEntityId.inputText;\n  var orderId = InputSenderOrderId.inputText;\n  if (entityId.length > 0) {\n    return GetEntityByEntityId.run();\n  } else if (orderId.length > 0) {\n    return GetEntityByOrderId.run();\n  }\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "Customer Details",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "64bf8f196d35216bd860d71a_64bf8f196d35216bd860d71d"
}